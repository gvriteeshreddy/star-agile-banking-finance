
pipeline {
    agent any

    tools {
        // Use the configured Maven version (ensure M2_HOME is set correctly in Jenkins global tool config)
        maven "maven"
    }

    stages {
        
      stage('Build') {
            steps {
                // Checkout from GitHub using the specified credentials
                git 'https://github.com/gvriteeshreddy/star-agile-banking-finance.git'

                // Run Maven on a Unix agent
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // For Windows agent, uncomment the following line
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
      stage('Generate Test Reports'){
            steps{
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/health-care/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
        }
      stage('Create Docker Image'){
            steps{
                sh 'docker build -t gvriteeshreddy/banking:1.0 .'
            }
        }
      stage('Docker-Login'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'Docker-Login', passwordVariable: 'dockerpassword', usernameVariable: 'dockerlogin')]) {
                    sh 'docker login -u ${dockerlogin} -p ${dockerpassword}'
                            }
                    }
            }
      stage('Push-Image'){
            steps{
                sh 'docker push gvriteeshreddy/banking:1.0'
                    }    
            }
      stage('Config & Deployment') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AwsAccess', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                dor('terraform-files'){
                sh 'sudo chmod 600 testing-keypair.pem'
                sh 'terraform init'
                sh 'terraform validate'
                sh 'terraform apply --auto-approve'
                }
            }
        }
    }
}

       
}
}
